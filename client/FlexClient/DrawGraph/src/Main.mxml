<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
			   creationComplete="initu()"
			   height="100%"
			   width="100%"
			   >
			   
	<fx:Declarations>
		<mx:HTTPService id="searchRequest" url="http://wikigraph.cs.washington.edu/api/graph.php" 
			fault="httpService_fault(event)" result="httpService_result(event)" useProxy="false" method="GET" resultFormat="e4x">
			<mx:request xmlns="">
				<q>{search.text}</q>
			</mx:request>
		</mx:HTTPService>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
		import Node;
		import DrawGraph;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.events.FaultEvent;
		import mx.controls.Alert;
		private var alert:Alert;
		public var sample:Array = new Array();
		public function initu():void {
		sample[0] = ["dispenser", "need a dispenser here"];
		sample[1] = ["teleporter", "teleporter coming up"];
		sample[2] = ["sentry", "sentry going up"];
		sample[3] = ["red", "Red Team"];
		sample[4] = ["blu", "Blu Team"];
		sample[5] = ["one", "two"];
		sample[6] = ["dispenser", "need a dispenser here"];
		sample[7] = ["teleporter", "teleporter coming up"];
		sample[8] = ["sentry", "sentry going up"];
		sample[9] = ["red", "Red Team"];
		sample[10] = ["blu", "Blu Team"];
		sample[11] = ["one", "two"];
		sample[12] = ["dispenser", "need a dispenser here"];
		sample[13] = ["teleporter", "teleporter coming up"];
		sample[14] = ["sentry", "sentry going up"];
		sample[15] = ["red", "Red Team"];
		sample[16] = ["blu", "Blu Team"];
		sample[17] = ["blu", "Blu Team"];
		sample[18] = ["one", "two"];
		sample[19] = ["dispenser", "need a dispenser here"];
		sample[20] = ["teleporter", "teleporter coming up"];
		sample[21] = ["sentry", "sentry going up"];
		sample[22] = ["red", "Red Team"];
		sample[23] = ["blu", "Blu Team"];
		sample[24] = ["this better work", "this better work"];
		}
		private function send_data():void {
            searchRequest.send();
        }
		private function httpService_fault(evt:FaultEvent):void {
			var title:String = evt.type + " (" + evt.fault.faultCode + ")";
			var text:String = evt.fault.faultString;
			alert = Alert.show(text, title);
		}
		
		//TODO: Call parser, which calls draw.
		private function httpService_result(evt:ResultEvent):void {
			//var xmlList:XMLList = XML(evt.result).source;
			//xc = new XMLListCollection(xmlList);
			//XMLoutput.text = XML(evt.result).@center;
			XMLoutput.text = XML(evt.result).toXMLString();
			//For debug: Hide Graph
			XMLoutput.visible = true;
			qq.visible = false;
		}
		
		//For debug: Hide XMLoutput
		private function draw():void {
			DrawGraph.DrawG(sample, qq);
			XMLoutput.visible = false;
			qq.visible = true;
		}
		]]> 
	</fx:Script>
	<s:Group id="qq" height="100%" width="100%">
		<s:BorderContainer backgroundColor="0xEEEEEE" cornerRadius="8" borderStyle="solid" borderWeight="2" 
		 height="72" width="144" alpha="1" />
	</s:Group>
	<!--<mx:Button x="0" y="0" width="100" label = "search" click="DrawGraph.DrawG(sample,qq)" />-->
	<mx:Button x="0" y="0" width="100" label = "search" click="send_data()" />
	<mx:Button x="0" y="25" width="100" label = "Draw Graph" click="draw()" />
	<mx:TextInput id="search" x="100" y="0" width="700"></mx:TextInput>
	<mx:TextArea id="XMLoutput" x="0" y="100" height="400" width="400" visible="false"></mx:TextArea>

		


</s:Application>