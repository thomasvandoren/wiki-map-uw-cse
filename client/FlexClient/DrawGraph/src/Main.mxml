<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
			   creationComplete="initu()"
			   height="100%"
			   width="100%"
			   >
	
	<fx:Script>
		<![CDATA[
		import flash.events.Event;
		import flash.events.MouseEvent;
		import flash.text.TextFormat;
		import Parse;
		import Node;
		import DrawGraph;
		import Network;
		import spark.components.Group;
		import flash.ui.Keyboard;
		import flash.events.KeyboardEvent;
		
		// handles the Enter on the keyboard pressed  					
		public function enterHandler(event:KeyboardEvent):void{
			if(event.keyCode == Keyboard.ENTER){
				handleSearch(event);
			}
		}
		
		// resizes graph
		private function resizeHandler(event:Event):void {
			qq.width = this.width;
			qq.height = this.height;
			setTextInput();
			if (qq.visible) {
				Network.reDraw(qq);
			}
		}
		
		// sets width of the text input
		private function setTextInput():void {
			searchText.width = this.width - searchText.x - 2;
		}
		
		public function initu():void {
			qq.visible = false;	
			searchButton.addEventListener(MouseEvent.CLICK, handleSearch);
			setTextInput();
			searchText.addEventListener(KeyboardEvent.KEY_DOWN, enterHandler);
			this.addEventListener(Event.RESIZE, resizeHandler);
		}
		
		//Handles mouse click events on the search button to search by the given searchText
		private function handleSearch(event:Event):void {
			search("name",searchText.text);
		}
		
		//Sends a search request of given type, with given arguments over the network to the backend.
		//Type may currently be"
		//-"name" to search by article name, 
		//-"id" to search by article id (not yet working on backend),
		//-"autocomplete" to get a list of relevant search requests (May change once backend gets graph and search request in one query
		private function search(type:String, arg:String):void {
			Network.search(type, arg, qq);
			//Austin, can you make this happen once you have drawn all of the nodes?
			// qq.visible = true;		
		}

		]]> 
	</fx:Script>
	
		
	<s:Group id="qq" height="100%" width="100%">

	</s:Group>
	<mx:Button id="searchButton" x="0" y="0" width="100" label = "Search" />
	<mx:TextInput id="searchText" x="100" y="0" width="700"></mx:TextInput>

		


</s:Application>
